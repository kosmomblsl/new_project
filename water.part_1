from tkinter import*
from random import*
from math import*

class particle():
    def __init__ (self,x0,y0,m):
        self.time = 0
        self.flag = 0
        self.size = m
        self.posx = x0
        self.posy = y0
        self.speedx = 0
        self.speedy = 0
        self.oval = canv.create_oval (x0 - m, y0 - m , x0 + m , y0 + m, fill = 'blue',outline = 'blue')
    def speed (self,vx,vy):
        self.speedx = vx
        self.speedy = vy

def mouse (event):
    getx=event.x_root - 50
    gety=event.y_root - 30
    new_elem = particle(getx,gety,m)
    elements.append(new_elem)
    vx = uniform(-20,20)
    vy = uniform(0,20)
    new_elem.speed(vx,vy)
    
def distance(a,b):
    r = sqrt((a.posx-b.posx)**2 +(a.posy-b.posy)**2)
    return r

def gravitation (speed,g,tau):
    new_speed = speed + g*tau
    return new_speed

def stop (event):
    flag = 0
    print("after stop",flag)

def motion (event):
    while 0 < 1:
        for first_elem in elements:
            if first_elem.posx > 1280:
                first_elem.posx = 1280 
                first_elem.speedx = -0.9*first_elem.speedx 
            if first_elem.posx < 20:
                first_elem.posx = 20
                first_elem.speedx = -0.9*first_elem.speedx 
            if first_elem.posy > 700:
                first_elem.posy = 700
                first_elem.speedy = -0.9*first_elem.speedy         
            if first_elem.posy < 20:
                first_elem.posy = 20
                first_elem.speedy = -0.9*first_elem.speedy
                
            for second_elem in elements:
                if first_elem != second_elem:
                    if distance(first_elem,second_elem) < 2*m:
                        v1x = first_elem.speedx
                        v1y = first_elem.speedy
                        first_elem.speedx = 0.9*second_elem.speedx
                        first_elem.speedy = 0.9*second_elem.speedy
                        second_elem.speedx = 0.9*v1x
                        second_elem.speedy = 0.9*v1y
                        if first_elem.posx > second_elem.posx:
                            first_elem.posx = first_elem.posx + m/2
                            second_elem.posx = second_elem.posx - m/2
                        else:
                            first_elem.posx = first_elem.posx + m/2
                            second_elem.posx = second_elem.posx - m/2
                        if first_elem.posy > second_elem.posy:
                            first_elem.posy = first_elem.posy + m/2
                            second_elem.posy = second_elem.posy - m/2
                        else:
                            first_elem.posy = first_elem.posy + m/2
                            second_elem.posy = second_elem.posy - m/2
            first_elem.speedy = gravitation(first_elem.speedy,10,0.1)
            first_elem.posx = first_elem.posx + 0.3*first_elem.speedx
            first_elem.posy = first_elem.posy + 0.3*first_elem.speedy
            canv.delete(first_elem.oval)
            first_elem.oval = canv.create_oval (first_elem.posx - m, first_elem.posy - m , first_elem.posx + m , first_elem.posy + m, fill = 'blue',outline = 'blue')
            canv.update()
          
root = Tk()
flag = 1
m = 5
elements = []
canv = Canvas(root,width=1300,height=720,bg="white",cursor="arrow")

canv.bind("<Motion>",mouse)
canv.bind("<Button-3>",motion)
canv.bind("<Button-2>",stop)
canv.pack()
root.mainloop()
